ggplot(aes(x = Time, y = Rate)) +
geom_area(aes(fill = Rate_Type), #alpha = 0.8,
position = "identity") +
geom_text(data = Rate_Winter, size= 3, color = "slategray4", hjust = 0, fontface = "bold",
aes(label = Label), vjust = -1) +
theme_tufte() +
theme(axis.line.x = element_line(size = 0.3),
legend.position = "none",
plot.title = element_text(hjust = 0.5, size = 11, family = "Times New Roman", face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 9, family = "Times New Roman"),
axis.title = element_blank(),
axis.text.x = element_text(size = 9),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
plot.margin = unit(c(0.3,1,0.3,1), "lines")) +
coord_cartesian(ylim = c(0, 46)) +
scale_x_time(expand = c(0,0),
breaks = c(0, 21600, 43200, 64800, 85400),
labels = c("12am", "6am", "12pm", "6pm", "12am")) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(values = c("slategray2", "slategray3", "slategray4")) +
labs(title = "Winter",
subtitle = "(October - May)")
ggarrange(Summer,
Winter,
ncol = 1,
nrow = 2)
Summer <- Xcel_Rates %>%
gather(key = Seasonal_Rate, value = Rate, -Time) %>%
separate(Seasonal_Rate, sep = "_", into = c("Season", "Rate_Type")) %>%
filter(Rate_Type != "Reg",
Season == "Summer") %>%
mutate(Rate_Type = factor(Rate_Type, levels = c("Off", "Mid", "Peak")),
Time = hms::as.hms(paste0(hour(Time), ":", minute(Time), ":", second(Time)))) %>%
ggplot(aes(x = Time, y = Rate)) +
geom_area(aes(fill = Rate_Type), #alpha = 0.8,
position = "identity") +
geom_text(data = Rate_Summer, size= 3, color = "slategray4", hjust = 0, fontface = "bold",
aes(label = Label), vjust = -0.7) +
theme_tufte() +
theme(axis.line.x = element_line(size = 0.3),
legend.position = "none",
plot.title = element_text(hjust = 0.5, size = 11, family = "Times New Roman", face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 9, family = "Times New Roman"),
axis.title = element_blank(),
axis.text.x = element_text(size = 9),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
plot.margin = unit(c(0.3,1,0.3,1), "lines")) +   #  top, right, bottom, left
coord_cartesian(ylim = c(0, 46)) +
scale_x_time(expand = c(0,0),
breaks = c(0, 21600, 43200, 64800, 85400),
labels = c("12am", "6am", "12pm", "6pm", "12am")) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(values = c("slategray2", "slategray3", "slategray4")) +
labs(title = "Summer",
subtitle = "(June - September)")
Winter <- Xcel_Rates %>%
gather(key = Seasonal_Rate, value = Rate, -Time) %>%
separate(Seasonal_Rate, sep = "_", into = c("Season", "Rate_Type")) %>%
filter(Rate_Type != "Reg",
Season == "Winter") %>%
mutate(Rate_Type = factor(Rate_Type, levels = c("Off", "Mid", "Peak")),
Time = hms::as.hms(paste0(hour(Time), ":", minute(Time), ":", second(Time)))) %>%
ggplot(aes(x = Time, y = Rate)) +
geom_area(aes(fill = Rate_Type), #alpha = 0.8,
position = "identity") +
geom_text(data = Rate_Winter, size= 3, color = "slategray4", hjust = 0, fontface = "bold",
aes(label = Label), vjust = -0.7) +
theme_tufte() +
theme(axis.line.x = element_line(size = 0.3),
legend.position = "none",
plot.title = element_text(hjust = 0.5, size = 11, family = "Times New Roman", face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 9, family = "Times New Roman"),
axis.title = element_blank(),
axis.text.x = element_text(size = 9),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
plot.margin = unit(c(0.3,1,0.3,1), "lines")) +
coord_cartesian(ylim = c(0, 46)) +
scale_x_time(expand = c(0,0),
breaks = c(0, 21600, 43200, 64800, 85400),
labels = c("12am", "6am", "12pm", "6pm", "12am")) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(values = c("slategray2", "slategray3", "slategray4")) +
labs(title = "Winter",
subtitle = "(October - May)")
ggarrange(Summer,
Winter,
ncol = 1,
nrow = 2)
library(shiny)
library(shiny)
library(shinyjs)
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(ggthemes)
library(readr)
library(janitor)
library(flextable)
library(shinyWidgets)
library(officer)
library(hms)
library(grid)
#library(broom)
#library(knitr)
#library(readxl)
#library(timeDate)
#library(xtable)
################# Load DFs
setwd("~/Desktop/Storage Guide 2")
Sml_House <- read_csv("Venning_Final/Sml_House.csv")
Med_House <- read_csv("Venning_Final/Med_House.csv")
Lrg_House <- read_csv("Venning_Final/Lrg_House.csv")
Med_House.rps <- read_csv("Venning_Final/Med_House_PS.csv")
Res_Solar <- read_csv("Venning_Final/Res_Solar.csv")
Commercial_PS <- read_csv("Venning_Final/Commercial_PS.csv")
Commercial <- read_csv("Venning_Final/Commercial.csv")
Generation <- read_csv("Venning_Final/MISO_Generation.csv")
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
Text <- data.frame("text" = c("Reserve and Response", "Transmission and Distribution Support", "Bulk Power Management"),
"X" = c(6, 19, 32),
"Y" = c(39, 39, 39))
Plot %>%
ggplot(aes(xmin = X_Min, xmax = X_Max, ymin = Y_Min, ymax = Y_Max, x = Label_X, y = Label_Y, fill = Class, color = Class, label = Tech)) +
geom_rect(inherit.aes = FALSE, aes(xmin = 0, xmax = 12, ymin = 0, ymax = 38), fill = "#e2e5e8") +
geom_rect(inherit.aes = FALSE, aes(xmin = 12, xmax = 26, ymin = 0, ymax = 38), fill = "#e8ebee") +
geom_rect(inherit.aes = FALSE, aes(xmin = 26, xmax = 38, ymin = 0, ymax = 38), fill = "#f0f2f3") +
geom_segment(inherit.aes = FALSE, x = 12, xend = 12, y = 0, yend = 38, size = 0.1, color = "#d4d8dd") +
geom_segment(inherit.aes = FALSE, x = 26, xend = 26, y = 0, yend = 38, size = 0.1, color = "#d4d8dd") +
#geom_rect(alpha = 0.5) +
#geom_text(size = 9, color = "black") +
geom_text(data = Text, inherit.aes = FALSE,
aes(x = X, y = Y, label = text),
size = 8) +
scale_y_continuous(expand = c(0,0),
breaks = c(8, 17, 26, 35),
labels = c("Seconds", "Minutes", "Hours", "Days")) +
scale_x_continuous(expand = c(0,0),
breaks = c(1, 7, 13, 19, 25, 31, 37),
labels = c("1kW", "10kW", "100kW", "1MW", "10MW", "100MW", "1GW")) +
scale_fill_manual(name = "Type of\nEnergy Storage",
breaks = c("Electrochemical", "Electromechanical", "Thermal", "Electrical", "Chemical"),
values = c("#B3C3C3", "#E78AC3", "#8DA0CB", "#66C2A5", "#FC8D62")) +
scale_color_manual(name = "Type of\nEnergy Storage",
breaks = c("Electrochemical", "Electromechanical", "Thermal", "Electrical", "Chemical"),
values = c("#B3C3C3", "#E78AC3", "#8DA0CB", "#66C2A5", "#FC8D62")) +
coord_cartesian(xlim = c(0, 38), ylim = c(0, 38), clip = 'off') +
theme_classic() +
theme(axis.title = element_text(size = 26, color = "black", family = "Helvetica"),
axis.title.x = element_text(vjust = -1),
axis.title.y = element_text(vjust = 5),
axis.text.y = element_text(angle = 90, size = 23, family = "Helvetica"),
axis.text.x = element_text(size = 24),
axis.ticks.y = element_blank(),
legend.position = "none",
plot.title = element_text(size = 30, hjust = 0.5, vjust = 18),
plot.margin = unit(c(3.5,0.5,1,2), "lines")) +
xlab("Power Capacity Range") +
ylab("Discharge Duration Range") +
labs(title = "Capacity and Duration Estimates for Energy Storage Technologies")
Plot <-  data.frame("Tech"  = c("Solid-State Batteries", "Ammonia-Based\nFuels", "Hydrogen Fuel Cells", "SMES", "High-Power Supercapacitors", "Flow Batteries",
"Lithium-Ion Batteries", "Molten Salt", "Flywheels", "Nickel-Metal Hydride Batteries", "Sodium-Sulfur\nBatteries", "High-Energy\nSupercapacitors",
"Compressed Air Energy Storage", "Hot Water\n Ice Storage", "Lead-Acid Batteries", "Pumped Hydro", "Thermal Envelope\nInsulation", "Coal/Natural Gas"),
"Class" = c("Electrochemical", "Chemical", "Chemical", "Electrical", "Electrical", "Electrochemical",
"Electrochemical", "Thermal", "Electromechanical", "Electrochemical", "Electrochemical", "Electrical",
"Electromechanical", "Thermal", "Electrochemical", "Electromechanical", "Thermal", "Chemical"),
"Community" = c(TRUE, FALSE, TRUE, FALSE, FALSE, TRUE,
TRUE, FALSE, FALSE, TRUE, FALSE, TRUE,
FALSE, TRUE, TRUE, FALSE, TRUE, FALSE),
"X_Min" = c( 0, 19, 11.5, 18,  6,  8,
0.7, 24,  4,  2, 15,  1.5,
25,  1.9,  1, 30,  1, 30),
"X_Max" = c( 0, 29, 26, 26, 17.5, 22,
16, 32, 17.5, 20, 24.5, 7.5,
38,  6.3, 23, 38,  9, 38),
"Y_Min" = c( 0, 29, 27,  1.5,  1.5, 24,
15, 25,  6, 10, 20, 18,
20, 24, 13, 27, 29, 35),
"Y_Max" = c( 0, 33, 30,  4,  4, 28,
22, 31,  8, 12, 25.5, 23,
24, 30, 16, 34, 34, 38),
"Label_X" = c(11.7, 22.3, 15.4, 22.0, 12.0, 11.7,
11.7, 27.3, 11.0, 11.0, 19.7,  4.5,
31.5,  4.0, 12.0, 34.7,  5.0, 34.0),
"Label_Y" = c(17.8, 31.0, 29.0,  2.8,  2.8, 26.0,
19.8, 28.0,  7.0, 11.0, 22.3, 20.5,
22.0, 26.8, 14.0, 30.7, 31.8, 36.5))
Text <- data.frame("text" = c("Reserve and Response", "Transmission and Distribution Support", "Bulk Power Management"),
"X" = c(6, 19, 32),
"Y" = c(39, 39, 39))
{
Plot %>%
ggplot(aes(xmin = X_Min, xmax = X_Max, ymin = Y_Min, ymax = Y_Max, x = Label_X, y = Label_Y, fill = Class, color = Class, label = Tech)) +
geom_rect(inherit.aes = FALSE, aes(xmin = 0, xmax = 12, ymin = 0, ymax = 38), fill = "#e2e5e8") +
geom_rect(inherit.aes = FALSE, aes(xmin = 12, xmax = 26, ymin = 0, ymax = 38), fill = "#e6e9ec") +
geom_rect(inherit.aes = FALSE, aes(xmin = 26, xmax = 38, ymin = 0, ymax = 38), fill = "#f0f2f3") +
geom_segment(inherit.aes = FALSE, x = 12, xend = 12, y = 0, yend = 38, size = 0.1, color = "#d4d8dd") +
geom_segment(inherit.aes = FALSE, x = 26, xend = 26, y = 0, yend = 38, size = 0.1, color = "#d4d8dd") +
geom_rect(alpha = 0.5) +
geom_text(size = 9, color = "black") +
geom_text(data = Text, inherit.aes = FALSE,
aes(x = X, y = Y, label = text),
size = 8) +
scale_y_continuous(expand = c(0,0),
breaks = c(8, 17, 26, 35),
labels = c("Seconds", "Minutes", "Hours", "Days")) +
scale_x_continuous(expand = c(0,0),
breaks = c(1, 7, 13, 19, 25, 31, 37),
labels = c("1kW", "10kW", "100kW", "1MW", "10MW", "100MW", "1GW")) +
scale_fill_manual(name = "Type of\nEnergy Storage",
breaks = c("Electrochemical", "Electromechanical", "Thermal", "Electrical", "Chemical"),
values = c("#B3C3C3", "#E78AC3", "#8DA0CB", "#66C2A5", "#FC8D62")) +
scale_color_manual(name = "Type of\nEnergy Storage",
breaks = c("Electrochemical", "Electromechanical", "Thermal", "Electrical", "Chemical"),
values = c("#B3C3C3", "#E78AC3", "#8DA0CB", "#66C2A5", "#FC8D62")) +
coord_cartesian(xlim = c(0, 38), ylim = c(0, 38)) +
theme_classic() +
theme(axis.title = element_text(size = 26, color = "black", family = "Helvetica"),
axis.title.x = element_text(vjust = -1),
axis.title.y = element_text(vjust = 5),
axis.text.y = element_text(angle = 90, size = 23, family = "Helvetica"),
axis.text.x = element_text(size = 24),
axis.ticks.y = element_blank(),
legend.position = "none",
plot.title = element_text(size = 30, hjust = 0.5, vjust = 18),
plot.margin = unit(c(3,0.5,1,1.3), "lines")) +
xlab("Power Capacity Range") +
ylab("Discharge Duration Range") +
labs(title = "Capacity and Duration Estimates for Energy Storage Technologies")
setwd("~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide/www")
setwd("~/Desktop")
ggsave(filename = "DurCapPlot.png", bg = "transparent")
} # Complete Capacity x Duration Plot
Plot %>%
ggplot(aes(xmin = X_Min, xmax = X_Max, ymin = Y_Min, ymax = Y_Max, x = Label_X, y = Label_Y, fill = Class, color = Class, label = Tech)) +
geom_rect(inherit.aes = FALSE, aes(xmin = 0, xmax = 12, ymin = 0, ymax = 38), fill = "#e2e5e8") +
geom_rect(inherit.aes = FALSE, aes(xmin = 12, xmax = 26, ymin = 0, ymax = 38), fill = "#e6e9ec") +
geom_rect(inherit.aes = FALSE, aes(xmin = 26, xmax = 38, ymin = 0, ymax = 38), fill = "#f0f2f3") +
geom_segment(inherit.aes = FALSE, x = 12, xend = 12, y = 0, yend = 38, size = 0.1, color = "#d4d8dd") +
geom_segment(inherit.aes = FALSE, x = 26, xend = 26, y = 0, yend = 38, size = 0.1, color = "#d4d8dd") +
geom_rect(alpha = 0.5) +
geom_text(size = 9, color = "black") +
geom_text(data = Text, inherit.aes = FALSE,
aes(x = X, y = Y, label = text),
size = 8) +
scale_y_continuous(expand = c(0,0),
breaks = c(8, 17, 26, 35),
labels = c("Seconds", "Minutes", "Hours", "Days")) +
scale_x_continuous(expand = c(0,0),
breaks = c(1, 7, 13, 19, 25, 31, 37),
labels = c("1kW", "10kW", "100kW", "1MW", "10MW", "100MW", "1GW")) +
scale_fill_manual(name = "Type of\nEnergy Storage",
breaks = c("Electrochemical", "Electromechanical", "Thermal", "Electrical", "Chemical"),
values = c("#B3C3C3", "#E78AC3", "#8DA0CB", "#66C2A5", "#FC8D62")) +
scale_color_manual(name = "Type of\nEnergy Storage",
breaks = c("Electrochemical", "Electromechanical", "Thermal", "Electrical", "Chemical"),
values = c("#B3C3C3", "#E78AC3", "#8DA0CB", "#66C2A5", "#FC8D62")) +
coord_cartesian(xlim = c(0, 38), ylim = c(0, 38)) +
theme_classic() +
theme(axis.title = element_text(size = 26, color = "black", family = "Helvetica"),
axis.title.x = element_text(vjust = -1),
axis.title.y = element_text(vjust = 5),
axis.text.y = element_text(angle = 90, size = 23, family = "Helvetica"),
axis.text.x = element_text(size = 24),
axis.ticks.y = element_blank(),
legend.position = "none",
plot.title = element_text(size = 30, hjust = 0.5, vjust = 18),
plot.margin = unit(c(3,0.5,1,1.3), "lines")) +
xlab("Power Capacity Range") +
ylab("Discharge Duration Range") +
labs(title = "Capacity and Duration Estimates for Energy Storage Technologies")
ggsave(filename = "DurCapPlot0.png", bg = "transparent", width = 17.8, height = 11.1, units = "in")
Plot %>%
ggplot(aes(xmin = X_Min, xmax = X_Max, ymin = Y_Min, ymax = Y_Max, x = Label_X, y = Label_Y, fill = Class, color = Class, label = Tech)) +
geom_rect(inherit.aes = FALSE, aes(xmin = 0, xmax = 12, ymin = 0, ymax = 38), fill = "#e2e5e8") +
geom_rect(inherit.aes = FALSE, aes(xmin = 12, xmax = 26, ymin = 0, ymax = 38), fill = "#e8ebee") +
geom_rect(inherit.aes = FALSE, aes(xmin = 26, xmax = 38, ymin = 0, ymax = 38), fill = "#f0f2f3") +
geom_segment(inherit.aes = FALSE, x = 12, xend = 12, y = 0, yend = 38, size = 0.1, color = "#d4d8dd") +
geom_segment(inherit.aes = FALSE, x = 26, xend = 26, y = 0, yend = 38, size = 0.1, color = "#d4d8dd") +
#geom_rect(alpha = 0.5) +
#geom_text(size = 9, color = "black") +
geom_text(data = Text, inherit.aes = FALSE,
aes(x = X, y = Y, label = text),
size = 8) +
scale_y_continuous(expand = c(0,0),
breaks = c(8, 17, 26, 35),
labels = c("Seconds", "Minutes", "Hours", "Days")) +
scale_x_continuous(expand = c(0,0),
breaks = c(1, 7, 13, 19, 25, 31, 37),
labels = c("1kW", "10kW", "100kW", "1MW", "10MW", "100MW", "1GW")) +
scale_fill_manual(name = "Type of\nEnergy Storage",
breaks = c("Electrochemical", "Electromechanical", "Thermal", "Electrical", "Chemical"),
values = c("#B3C3C3", "#E78AC3", "#8DA0CB", "#66C2A5", "#FC8D62")) +
scale_color_manual(name = "Type of\nEnergy Storage",
breaks = c("Electrochemical", "Electromechanical", "Thermal", "Electrical", "Chemical"),
values = c("#B3C3C3", "#E78AC3", "#8DA0CB", "#66C2A5", "#FC8D62")) +
coord_cartesian(xlim = c(0, 38), ylim = c(0, 38), clip = 'off') +
theme_classic() +
theme(axis.title = element_text(size = 26, color = "black", family = "Helvetica"),
axis.title.x = element_text(vjust = -1),
axis.title.y = element_text(vjust = 5),
axis.text.y = element_text(angle = 90, size = 23, family = "Helvetica"),
axis.text.x = element_text(size = 24),
axis.ticks.y = element_blank(),
legend.position = "none",
plot.title = element_text(size = 30, hjust = 0.5, vjust = 18),
plot.margin = unit(c(3.5,0.5,1,2), "lines")) +
xlab("Power Capacity Range") +
ylab("Discharge Duration Range") +
labs(title = "Capacity and Duration Estimates for Energy Storage Technologies")
setwd("~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide/www")
ggsave(filename = "DurCapPlot0.png", bg = "transparent", width = 17.8, height = 11.1, units = "in")
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
Plot %>%
ggplot(aes(xmin = X_Min, xmax = X_Max, ymin = Y_Min, ymax = Y_Max, x = Label_X, y = Label_Y, fill = Class, color = Class, label = Tech)) +
geom_rect(inherit.aes = FALSE, aes(xmin = 0, xmax = 12, ymin = 0, ymax = 38), fill = "#e2e5e8") +
geom_rect(inherit.aes = FALSE, aes(xmin = 12, xmax = 26, ymin = 0, ymax = 38), fill = "#e8ebee") +
geom_rect(inherit.aes = FALSE, aes(xmin = 26, xmax = 38, ymin = 0, ymax = 38), fill = "#f0f2f3") +
geom_segment(inherit.aes = FALSE, x = 12, xend = 12, y = 0, yend = 38, size = 0.1, color = "#d4d8dd") +
geom_segment(inherit.aes = FALSE, x = 26, xend = 26, y = 0, yend = 38, size = 0.1, color = "#d4d8dd") +
#geom_rect(alpha = 0.5) +
#geom_text(size = 9, color = "black") +
geom_text(data = Text, inherit.aes = FALSE,
aes(x = X, y = Y, label = text),
size = 8) +
scale_y_continuous(expand = c(0,0),
breaks = c(8, 17, 26, 35),
labels = c("Seconds", "Minutes", "Hours", "Days")) +
scale_x_continuous(expand = c(0,0),
breaks = c(1, 7, 13, 19, 25, 31, 37),
labels = c("1kW", "10kW", "100kW", "1MW", "10MW", "100MW", "1GW")) +
scale_fill_manual(name = "Type of\nEnergy Storage",
breaks = c("Electrochemical", "Electromechanical", "Thermal", "Electrical", "Chemical"),
values = c("#B3C3C3", "#E78AC3", "#8DA0CB", "#66C2A5", "#FC8D62")) +
scale_color_manual(name = "Type of\nEnergy Storage",
breaks = c("Electrochemical", "Electromechanical", "Thermal", "Electrical", "Chemical"),
values = c("#B3C3C3", "#E78AC3", "#8DA0CB", "#66C2A5", "#FC8D62")) +
coord_cartesian(xlim = c(0, 38), ylim = c(0, 38), clip = 'off') +
theme_classic() +
theme(axis.title = element_text(size = 26, color = "black", family = "Helvetica"),
axis.title.x = element_text(vjust = -1),
axis.title.y = element_text(vjust = 5),
axis.text.y = element_text(angle = 90, size = 23, family = "Helvetica"),
axis.text.x = element_text(size = 24),
axis.ticks.y = element_blank(),
legend.position = "none",
plot.title = element_text(size = 30, hjust = 0.5, vjust = 18),
plot.margin = unit(c(3.5,0.5,1,2), "lines")) +
xlab("Power Capacity") +
ylab("Discharge Duration") +
labs(title = "Capacity and Duration Estimates for Energy Storage Technologies")
ggsave(filename = "DurCapPlot0.png", bg = "transparent", width = 17.8, height = 11.1, units = "in")
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
runApp('~/Desktop/Community Energy Storage Guide/Energy-Storage-Guide')
